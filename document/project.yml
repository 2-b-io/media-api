openapi: 3.0.0
servers:
  - description: Media-network api localhost servers
    url: http://localhost:{port}
    variables:
      port:
        default: '3008'
info:
  description: Api for Project
  version: '1.0.0'
  title: Media-network project api
components:
  securitySchemes:
    contentType:
      type: apiKey
      in: header
      name: Content-Type
    authorization:
      type: apiKey
      in: header
      name: Authorization
    accountAuthorization:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    Project:
      type: object
      properties:
        identifier:
          type: string
        email:
          type: string
        name:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
paths:
  /projects:
    get:
      summary: List projects.
      description: Return the list of project.
      security:
        - contentType: []
          accountAuthorization: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '404':
          description: NOT_FOUND
    post:
      summary: Create project.
      description: Return created project info.
      security:
        - contentType: []
          accountAuthorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                provider:
                  type: string
                  example: cloudfront
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '409':
          description: CONFLICT
  /projects/{projectIdentifier}:
    get:
      summary: Get project.
      description: Return the project info.
      security:
        - contentType: []
          accountAuthorization: []
      parameters:
        - name: projectIdentifier
          in: path
          example: 'delay-smoke-94'
          required: true
          description: 'The identifier of the project to return.'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: NOT_FOUND
    patch:
      summary: Update project.
      description: Return updated project info.
      security:
        - contentType: []
          accountAuthorization: []
      parameters:
        - name: projectIdentifier
          in: path
          example: 'delay-smoke-94'
          required: true
          description: 'The identifier of the project to update.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'update project with isActive'
                isActive:
                  type: boolean
                  description: 'update project with isActive'
                status:
                  type: string
                  example: 'DEPLOYED, DISABLED'
                  description: 'update project status only'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '403':
          description: FORBIDDEN
        '404':
          description: NOT_FOUND
    delete:
      summary: Delete project.
      description: Delete the project with identifier.
      security:
        - contentType: []
          accountAuthorization: []
      parameters:
        - name: projectIdentifier
          in: path
          example: 'badass-victory-82'
          required: true
          description: The identifier to delete project.
          schema:
            type: string
      responses:
        '403':
          description: FORBIDDEN
        '204':
          description: NO_CONTENT
  /projects/{projectIdentifier}/cache-setting:
    get:
      summary: Get cache setting
      description: Get the cache setting from project
      security:
        - contentType: []
          accountAuthorization: []
      parameters:
        - name: projectIdentifier
          in: path
          example: 'badass-victory-82'
          required: true
          description: The identifier to delete project.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ttl:
                    type: string
        '404':
          description: NOT_FOUND
    put:
      summary: Update cache setting
      description: Update the cache setting.
      security:
        - contentType: []
          accountAuthorization: []
      parameters:
        - name: projectIdentifier
          in: path
          example: 'badass-victory-82'
          required: true
          description: The identifier to delete project.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ttl:
                  type: string
                  description: 'Unit of ttl is milliseconds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ttl:
                    type: string
        '403':
          description: FORBIDDEN
